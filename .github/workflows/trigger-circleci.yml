name: trigger-circleci
on:
  workflow_dispatch:
    inputs:
      # these inputs will be shown to the user on GitHub Actions page
      # and the user can simply check off the tags to run
      # the two sets of tests covering most of the features
      # NOTE: GitHub workflows are limited to ten input parameters
      sanity:
        description: Run the tests tagged "@sanity"
        required: false
        type: boolean
      regression:
        description: Run the tests tagged "@regression"
        required: false
        type: boolean
      # tests for individual features
      adding:
        description: Run the tests tagged "@adding"
        required: false
        type: boolean
      complete:
        description: Run the tests tagged "@complete"
        required: false
        type: boolean
      editing:
        description: Run the tests tagged "@editing"
        required: false
        type: boolean
      item:
        description: Run the tests tagged "@item"
        required: false
        type: boolean
      persistence:
        description: Run the tests tagged "@persistence"
        required: false
        type: boolean
      routing:
        description: Run the tests tagged "@routing"
        required: false
        type: boolean
      recordedRunTag:
        description: Cypress Dashboard run tag
        required: false
        type: string
      machines:
        description: Number of machines to use
        required: false
        type: integer
        default: 1

jobs:
  trigger-circleci:
    runs-on: ubuntu-24.04
    steps:
      - name: Print GitHub event inputs
        env:
          EVENT: ${{ toJson(github.event.inputs) }}
        run: |
          echo "$EVENT"
          # all environment variables that start with GITHUB_
          # https://github.com/bahmutov/print-env
          npx @bahmutov/print-env GITHUB_

      - name: Trigger CircleCI run
        env:
          CIRCLE_CI_API_TOKEN: ${{ secrets.CIRCLE_CI_API_TOKEN }}
          # show parsed parameters when triggering the CircleCI pipeline
          DEBUG: trigger-circleci-pipeline
        run: |
          # collect all input parameters into one string
          TAGS=
          if [[ "${{ github.event.inputs.sanity }}" == "true" ]]; then
            TAGS="@sanity"
          fi
          if [[ "${{ github.event.inputs.regression }}" == "true" ]]; then
            TAGS="$TAGS,@regression"
          fi
          if [[ "${{ github.event.inputs.adding }}" == "true" ]]; then
            TAGS="$TAGS,@adding"
          fi
          if [[ "${{ github.event.inputs.complete }}" == "true" ]]; then
            TAGS="$TAGS,@complete"
          fi
          if [[ "${{ github.event.inputs.editing }}" == "true" ]]; then
            TAGS="$TAGS,@editing"
          fi
          if [[ "${{ github.event.inputs.item }}" == "true" ]]; then
            TAGS="$TAGS,@item"
          fi
          if [[ "${{ github.event.inputs.persistence }}" == "true" ]]; then
            TAGS="$TAGS,@persistence"
          fi
          if [[ "${{ github.event.inputs.routing }}" == "true" ]]; then
            TAGS="$TAGS,@routing"
          fi

          echo "Collected tags: $TAGS"
          echo "Number of machines: ${{ github.event.inputs.machines }}"
          echo "Optional dashboard run tag: ${{ github.event.inputs.recordedRunTag }}"
          # using an environment variable makes it shorter in the next step
          export RUN_TAG="${{ github.event.inputs.recordedRunTag }}"

          # https://github.com/bahmutov/trigger-circleci-pipeline
          # note that we need to quote the entire parameters string
          # and escape quotes for individual parts that can have spaces in them
          npx trigger-circleci-pipeline@1.9.1 \
            --org bahmutov --project test-todomvc-using-app-actions \
            --parameters "MACHINES=${{ github.event.inputs.machines }},RECORDED_RUN_TAG=\"${RUN_TAG}\",GREP_TAGS=\"${TAGS}\"" \
            --branch $GITHUB_REF_NAME
